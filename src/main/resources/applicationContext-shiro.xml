<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- shiro的web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- securityManager -->
		<property name="securityManager" ref="securityManager" />
		<!-- logurl的请求地址，如果没有认证则会请求此地址， -->
		<property name="loginUrl" value="/login.html"></property>
		<!-- 认证成功的统一的跳转地址 -->
		<property name="successUrl" value="/welcome.html"></property>
		<!-- 指定没有权限跳转的页面 -->
		<!-- <property name="unauthorizedUrl" value="/unauthorized.jsp"></property>  -->
		<!-- 自定义过滤内容 -->
		<property name="filters">
			<map>
				<entry key="authc" value-ref="formAuthenticationFilter"></entry>
			</map>
		</property>
		<!-- 过滤定义，从上往下执行 -->
		<property name="filterChainDefinitions">
			<value>
				/unauthorized.jsp = anon
				/500.jsp = anon
				/index.jsp = anon
				/default.jsp = anon
				/logout.html = logout
				/getYzm.html = anon
				/welcome.html = user
				/tst/noqx.html = user
				/** =authc
			</value>
		</property>
	</bean>
	<!-- securityManager安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 认证，授权 -->
		<property name="realm" ref="customrealm"></property>
		<!-- session管理器 -->
		<property name="sessionManager" ref="sessionManager"></property>
		<!-- 缓存管理器 -->
		<property name="cacheManager" ref="cacheManager"></property>
	</bean>
	<!-- realm -->
	<bean id="customrealm" class="com.my.shiroredis.sys.login.CustomRealm">
		<!-- 将凭证管理器设置到realm中，realm按照凭证管理器进行散列次数 -->
		<property name="credentialsMatcher" ref="credentialsMatcher"></property>
		<property name="cachingShiroSessionDao" ref="cachingShiroSessionDao"></property>
	</bean>
	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<!-- 加密方式 -->
		<property name="hashAlgorithmName" value="md5"></property>
		<!-- 加密次数 -->
		<property name="hashIterations" value="1"></property>
	</bean>
	
	<!-- 缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:shiro-cache.xml"></property>
	</bean>
	<!-- 会话ID生成器 -->
	<!-- <bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" /> -->
	
	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- session的失效时间 ,单位是毫秒值 -->
		<property name="globalSessionTimeout" value="120000"></property>
		<!-- session失效后删除session -->
		<property name="deleteInvalidSessions" value="false"></property>
		<!-- 是否开启会话验证器任务 默认true -->
		<property name="sessionValidationSchedulerEnabled" value="false" />
		<!-- 会话验证器调度时间 -->
		<property name="sessionValidationInterval" value="60000" />
		<property name="sessionFactory" ref="sessionFactory"/>
		<property name="sessionDAO" ref="cachingShiroSessionDao" />
		<!-- 默认JSESSIONID，同tomcat/jetty在cookie中缓存标识相同，修改用于防止访问404页面时，容器生成的标识把shiro的覆盖掉 --> 
		<property name="sessionIdCookie">
		    <bean class="org.apache.shiro.web.servlet.SimpleCookie">
		         <constructor-arg name="name" value="SHIROSESSIONID"></constructor-arg>
		    </bean>
		</property>
		<property name="sessionListeners">
		    <list>
		         <bean class="com.my.shiroredis.shiro.sessionservice.ShiroSessionListener">
		              <property name="cachingShiroSessionDao" ref="cachingShiroSessionDao"></property>
		         </bean>
		    </list> 
		</property> 
	</bean>
	
	<!-- 自定义session工厂方法，返回会表示是否修改主要自定义session -->
	<bean id="sessionFactory" class="com.my.shiroredis.utils.ShiroSessionFactory"></bean>
	
	<!-- 普通持久化接口，不会被缓存 每次doReadSession会被反复调用 -->    
    <!-- 使用可被缓存的Dao ，本地缓存减轻网络压力 -->  
    <!-- 可缓存Dao，操作自定义Session,添加标识位，减少doUpdate方法中Redis的连接次数来减轻网络压力 --> 
    <bean id="cachingShiroSessionDao" class="com.my.shiroredis.shiro.cacheservice.CachingShiroSessionDao">
          <property name="prefix" value="ShiroSession_"></property>
          <!-- 注意中央缓存有效时间要比本地缓存有效时间长 -->
          <property name="seconds" value="120"></property>
          <!-- 特殊配置，只用于没有redis时将session放到eacache中 -->
          <property name="onlyEhCache" value="false"></property>
    </bean>
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->  
     <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- AOP式方法级权限检查   -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"  
          depends-on="lifecycleBeanPostProcessor">  
        <property name="proxyTargetClass" value="true"/>  
    </bean>  
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
        <property name="securityManager" ref="securityManager"/>  
    </bean> 
	
	<!-- 自定义form的认证过滤器 -->
	<bean id="formAuthenticationFilter" class="com.my.shiroredis.sys.login.FormCustomRealm">
		<!-- 表单中的input name -->
		<property name="usernameParam" value="name"></property>
		<!-- 表单中的密码 -->
		<property name="passwordParam" value="password"></property>
	</bean>
</beans>